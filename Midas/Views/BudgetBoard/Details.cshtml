@using Midas_Models.BudgetBoard
@model BudgetBoardDetailDTO

@{
    ViewData["Title"] = "Details";
    var expenseTotal = ViewBag.expenseTotal;
    var livingAmountLeft = Model.LivingAmount - expenseTotal;
    var leiserAmountLeft = Model.LeisureAmount;
    var savingsAmountLeft = Model.SavingsAmount;
}

<div>
    <h2>Board: @Model.BudgetBoardName</h2>
    <hr />
    <div class="row">
        <dl class="row col-sm">
            <dt class="col-sm-6">
                @Html.DisplayName("Living Amount")
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.LivingAmount)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayName("Total After Expenses")
            </dt>
            <dd class="col-sm-6">
                @string.Format("{0:C}", livingAmountLeft)
            </dd>
        </dl>
        <dl class="row col-sm">
            <dt class="col-sm-6">
                @Html.DisplayName("Savings Amount")
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.SavingsAmount)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayName("Total After Expenses")
            </dt>
            <dd class="col-sm-6">
                @string.Format("{0:C}", savingsAmountLeft)
            </dd>
        </dl>
        <dl class="row col-sm">
            <dt class="col-sm-6">
                @Html.DisplayName("Leisure Amount")
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.LeisureAmount)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayName("Total After Expenses")
            </dt>
            <dd class="col-sm-6">
                @string.Format("{0:C}", leiserAmountLeft)
            </dd>
        </dl>
    </div>
</div>
<div class="card">
    <div class="card-header">
        <h3>Monthly Expenses Total: $@expenseTotal</h3>
    </div>
    <div class="expense_table card-body">
        @if (Model.MonthlyExpenses.Any())
        {<table class="table table-hover boardTable">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayName("Name")
                        </th>
                        <th>
                            @Html.DisplayName("Amount")
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var expense in Model.MonthlyExpenses)
                    {
                        <tr>
                            <td>
                                @expense.BillName
                            </td>
                            <td>
                                @string.Format("{0:C}", expense.BillAmount)
                            </td>
                            <td>
                                <form asp-action="DeleteMonthlyExpense" asp-route-expenseId="@expense.MonthlyExpenseId" asp-route-budgetBoardId="@Model.BudgetBoardId" method="post">
                                    @Html.ActionLink("Edit", "Edit", new { id = expense.MonthlyExpenseId }) |
                                    @Html.ActionLink("Details", "ExpenseDetails", new { id = expense.MonthlyExpenseId }) |
                                    <button type="submit" class="btn-link" onclick="return confirm('Are you sure you wish to delete this expense?'); ">
                                        Delete
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <h5 class="card-title">No Expenses Have Been Added To This Board</h5>
        }
    </div>
    <div class="card-footer">
        <partial name="~/Views/Shared/_AddMonthlyExpenseToBoard.cshtml" />
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
